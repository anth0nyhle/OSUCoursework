<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="40000">
	<ForwardTool name="Jumper">
		<defaults>
			<ControlLinear name="default">
				<is_model_control>true</is_model_control>
				<extrapolate>true</extrapolate>
				<default_min>0.02</default_min>
				<default_max>1</default_max>
				<filter_on>false</filter_on>
				<use_steps>false</use_steps>
				<x_nodes />
				<min_nodes />
				<max_nodes />
				<kp>100</kp>
				<kv>20</kv>
			</ControlLinear>
			<CoordinateActuator name="default">
				<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
				<appliesForce>true</appliesForce>
				<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
				<min_control>-Inf</min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
				<max_control>Inf</max_control>
				<!--Name of the generalized coordinate to which the actuator applies.-->
				<coordinate>Unassigned</coordinate>
				<!--The maximum generalized force produced by this actuator.-->
				<optimal_force>1000</optimal_force>
			</CoordinateActuator>
			<PointActuator name="default">
				<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
				<appliesForce>true</appliesForce>
				<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
				<min_control>-Inf</min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
				<max_control>Inf</max_control>
				<!--Name of Body to which this actuator is applied.-->
				<body></body>
				<!--Location of application point; in body frame unless point_is_global=true-->
				<point>0 0 0</point>
				<!--Interpret point in Ground frame if true; otherwise, body frame.-->
				<point_is_global>false</point_is_global>
				<!--Force application direction; in body frame unless force_is_global=true.-->
				<direction>-1 -0 -0</direction>
				<!--Interpret direction in Ground frame if true; otherwise, body frame.-->
				<force_is_global>true</force_is_global>
				<!--The maximum force produced by this actuator when fully activated.-->
				<optimal_force>1000</optimal_force>
			</PointActuator>
			<TorqueActuator name="default">
				<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
				<appliesForce>true</appliesForce>
				<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
				<min_control>-Inf</min_control>
				<!--Maximum allowed value for control signal. Used primarily when solving for control values.-->
				<max_control>Inf</max_control>
				<!--Name of Body to which the torque actuator is applied.-->
				<bodyA>Unassigned</bodyA>
				<!--Name of Body to which the equal and opposite torque is applied.-->
				<bodyB>Unassigned</bodyB>
				<!--Interpret axis in Ground frame if true; otherwise, body A's frame.-->
				<torque_is_global>true</torque_is_global>
				<!--Fixed direction about which torque is applied, in Ground or body A frame depending on 'torque_is_global' property.-->
				<axis>-1 -0 -0</axis>
				<!--The maximum torque produced by this actuator when fully activated.-->
				<optimal_force>1000</optimal_force>
			</TorqueActuator>
			<Thelen2003Muscle name="default">
				<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
				<appliesForce>true</appliesForce>
				<!--Minimum allowed value for control signal. Used primarily when solving for control values.-->
				<min_control>0.01</min_control>
				<!--The set of points defining the path of the actuator.-->
				<GeometryPath>
					<!--The set of points defining the path-->
					<PathPointSet>
						<objects />
						<groups />
					</PathPointSet>
					<!--The wrap objects that are associated with this path-->
					<PathWrapSet>
						<objects />
						<groups />
					</PathWrapSet>
					<!--Default appearance attributes for this GeometryPath-->
					<Appearance>
						<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
						<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
					</Appearance>
				</GeometryPath>
				<!--The maximum force this actuator can produce.-->
				<optimal_force>1</optimal_force>
				<!--Maximum isometric force that the fibers can generate-->
				<max_isometric_force>546</max_isometric_force>
				<!--Optimal length of the muscle fibers-->
				<optimal_fiber_length>0.053499999999999999</optimal_fiber_length>
				<!--Resting length of the tendon-->
				<tendon_slack_length>0.078</tendon_slack_length>
				<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
				<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
				<max_contraction_velocity>10</max_contraction_velocity>
				<!--tendon strain at maximum isometric muscle force-->
				<FmaxTendonStrain>0.033000000000000002</FmaxTendonStrain>
				<!--passive muscle strain at maximum isometric muscle force-->
				<FmaxMuscleStrain>0.59999999999999998</FmaxMuscleStrain>
				<!--shape factor for Gaussian active muscle force-length relationship-->
				<KshapeActive>0.5</KshapeActive>
				<!--exponential shape factor for passive force-length relationship-->
				<KshapePassive>4</KshapePassive>
				<!--force-velocity shape factor-->
				<Af>0.29999999999999999</Af>
				<!--maximum normalized lengthening force-->
				<Flen>1.8</Flen>
				<!--Activation time constant, in seconds-->
				<activation_time_constant>0.01</activation_time_constant>
				<!--Deactivation time constant, in seconds-->
				<deactivation_time_constant>0.040000000000000001</deactivation_time_constant>
			</Thelen2003Muscle>
			<CMC_Joint name="default">
				<!--Flag (true or false) indicating whether or not a task is enabled.-->
				<on>false</on>
				<!--Weight with which a task is tracked relative to other tasks. To track a task more tightly, make the weight larger.-->
				<weight> 1 1 1</weight>
				<!--Name of body frame with respect to which a tracking objective is specified. The special name 'center_of_mass' refers to the system center of mass. This property is not used for tracking joint angles.-->
				<wrt_body>-1</wrt_body>
				<!--Name of body frame in which the tracking objectives are expressed.  This property is not used for tracking joint angles.-->
				<express_body>-1</express_body>
				<!--Array of 3 flags (each true or false) specifying whether a component of a task is active.  For example, tracking the trajectory of a point in space could have three components (x,y,z).  This allows each of those to be made active (true) or inactive (false).  A task for tracking a joint coordinate only has one component.-->
				<active>false false false </active>
				<!--Position error feedback gain (stiffness). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
				<kp> 1 1 1</kp>
				<!--Velocity error feedback gain (damping). To achieve critical damping of errors, choose kv = 2*sqrt(kp).-->
				<kv> 1 1 1</kv>
				<!--Feedforward acceleration gain.  This is normally set to 1.0, so no gain.-->
				<ka> 1 1 1</ka>
				<!--Direction vector[3] for component 0 of a task. Joint tasks do not use this property.-->
				<r0> 0 0 0</r0>
				<!--Direction vector[3] for component 1 of a task. Joint tasks do not use this property.-->
				<r1> 0 0 0</r1>
				<!--Direction vector[3] for component 2 of a task. Joint tasks do not use this property.-->
				<r2> 0 0 0</r2>
				<!--Name of the coordinate to be tracked.-->
				<coordinate />
				<!--Error limit on the tracking accuracy for this coordinate. If the tracking errors approach this limit, the weighting for this coordinate is increased. -->
				<limit>0</limit>
			</CMC_Joint>
		</defaults>
		<!--Name of the .osim file used to construct a model.-->
		<model_file />
		<!--Replace the model's force set with sets specified in <force_set_files>? If false, the force set is appended to.-->
		<replace_force_set>false</replace_force_set>
		<!--List of xml files used to construct a force set for the model.-->
		<force_set_files />
		<!--Directory used for writing results.-->
		<results_directory>ForwardResults</results_directory>
		<!--Output precision.  It is 8 by default.-->
		<output_precision>20</output_precision>
		<!--Initial time for the simulation.-->
		<initial_time>0</initial_time>
		<!--Final time for the simulation.-->
		<final_time>1</final_time>
		<!--Flag indicating whether or not to compute equilibrium values for states other than the coordinates or speeds.  For example, equilibrium muscle fiber lengths or muscle forces.-->
		<solve_for_equilibrium_for_auxiliary_states>true</solve_for_equilibrium_for_auxiliary_states>
		<!--Maximum number of integrator steps.-->
		<maximum_number_of_integrator_steps>20000</maximum_number_of_integrator_steps>
		<!--Maximum integration step size.-->
		<maximum_integrator_step_size>1</maximum_integrator_step_size>
		<!--Minimum integration step size.-->
		<minimum_integrator_step_size>1e-08</minimum_integrator_step_size>
		<!--Integrator error tolerance. When the error is greater, the integrator step size is decreased.-->
		<integrator_error_tolerance>0.001</integrator_error_tolerance>
		<!--Set of analyses to be run during the investigation.-->
		<AnalysisSet name="Analyses">
			<objects>
				<JointReaction name="JointReaction">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<!--The name of a file containing forces storage. If a file name is provided, the forces for all actuators will be applied according to values specified in the forces_file instead of being computed from the states. This option should be used to calculate joint reactions from static optimization results.-->
					<forces_file />
					<!--Names of the joints on which to perform the analysis. The key word 'All' indicates that the analysis should be performed for all joints.-->
					<joint_names> ALL</joint_names>
					<!--Choice of body ('parent' or 'child') for which the reaction loads are calculated. Child body is default. The array must either have one entry or the same number of entries as joints specified above. If the array has one entry only, that selection is applied to all chosen joints.-->
					<apply_on_bodies> child</apply_on_bodies>
					<!--Names of frames in which the calculated reactions are expressed, or the keyword 'child' or 'parent' to indicate the joint's 'child' or 'parent' Frame. ground is default. If a Frame named 'child' or 'parent' exists and the keyword 'child' or 'parent' is used, the analysis will use that Frame. The array must either have one entry or the same number of entries as joints specified above. If the array has one entry only, that selection is applied to all chosen joints.-->
					<express_in_frame> ground</express_in_frame>
				</JointReaction>
				<ForceReporter name="ForceReporter">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<!--Flag indicating whether to include forces due to constraints.-->
					<include_constraint_forces>false</include_constraint_forces>
				</ForceReporter>
				<BodyKinematics name="BodyKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<!--Names of bodies to record kinematics for.  Use 'all' to record all bodies.  The special name 'center_of_mass' refers to the combined center of mass.-->
					<bodies> all</bodies>
					<!--Flag (true or false) indicating whether to express results in the global frame or local-frames of the bodies. Body positions and center of mass results are always given in the global frame. This flag is set to false by default.-->
					<express_results_in_body_local_frame>false</express_results_in_body_local_frame>
				</BodyKinematics>
			</objects>
			<groups />
		</AnalysisSet>
		<!--Controller objects in the model.-->
		<ControllerSet name="Controllers">
			<objects>
				<ControlSetController>
					<!--The list of model actuators that this controller will control.The keyword ALL indicates the controller will control all the actuators in the model-->
					<actuator_list></actuator_list>
					<!--A Storage (.sto) or an XML control nodes file containing the controls for this controlSet.-->
					<controls_file>Simulation_Lab1_controls.xml</controls_file>
				</ControlSetController>
			</objects>
			<groups />
		</ControllerSet>
		<!--XML file (.xml) containing the forces applied to the model as ExternalLoads.-->
		<external_loads_file />
		<!--Storage file (.sto) containing the initial states for the forward simulation. This file often contains multiple rows of data, each row being a time-stamped array of states. The first column contains the time.  The rest of the columns contain the states in the order appropriate for the model. In a storage file, unlike a motion file (.mot), non-uniform time spacing is allowed.  If the user-specified initial time for a simulation does not correspond exactly to one of the time stamps in this file, interpolation is NOT used because it is usually necessary to being a simulation from an exact set of states.  Instead, the closest earlier set of states is used. Having a states file that contains the entire trajectory of a simulations allows for corrective springs for perturbation analysis to be added.-->
		<states_file>Simulation_Lab1_initial_states.sto</states_file>
		<!--Flag (true or false) indicating whether or not the integrator should use a particular time stepping.  If true, the time stepping is extracted from the initial states file.  In this situation, therefore, the initial states file must contain all the time steps in a simulation and be written out to high precision (usually 20 decimal places).  Setting this flag to true can be useful when reproducing a previous forward simulation with as little drift as possible.  If this flag is false, the integrator is left to determine its own time stepping.-->
		<use_specified_dt>false</use_specified_dt>
	</ForwardTool>
</OpenSimDocument>
